@model Hattmakarens_system.ViewModels.OrderModel

@{
    ViewBag.Title = "CreateOrder";
}


<h2>Registrera beställning</h2>

<div class="row">
    <div class="col-md-4">
        @*@Html.ActionLink("Välj kund för beställningen", "SearchCustomer", "Customer")*@
        <input type="button" class="btn" value="Lägg till kund för beställningen" onclick="location.href = '@Url.Action("SearchCustomer", "Customer")'" />
        @*<p>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name) </p>
            <p>@Html.DisplayNameFor(model => model.Address): @Html.DisplayFor(model => model.Address)</p>
            <p>@Html.DisplayNameFor(model => model.Private): @Html.DisplayFor(model => model.Private)</p>
            <p>@Html.ActionLink("Uppdatera information", "EditInfo", new { @Model.Id })</p>*@
    </div>
</div>

@if (Model != null)
{
    if (Model.CustomerEmail != null)
    {
        <h4>Vald kund:</h4>
        <p>Id: @Html.DisplayFor(model => model.CustomerId)</p>
        <p>Namn: @Html.DisplayFor(model => model.CustomerName)</p>
        <p>E-post: @Html.DisplayFor(model => model.CustomerEmail)</p>
    }
}

<br />

<h3>Specialtillverkade hattar</h3>

<p>
    @*@Html.ActionLink("Lägg till specialtillverkad hatt", "CreateSpec", "Hat", new (orderId = Model.Id), null)*@
    <input type="button" class="btn" value="Lägg till specialtillverkad hatt" onclick="location.href = '@Url.Action("CreateSpec", "Hat", new { orderId = Model.Id, customerEmail = Model.CustomerEmail})'" />
</p>
<div>
    @Html.Partial("_ListSpecHats")
</div>

<br />

<h3>Lagerförda hattar</h3>

<p>
    @*@Html.ActionLink("Lägg till lagerförd hatt", "CreateStored", "Hat")*@
    <input type="button" class="btn" value="Lägg till lagerförd hatt" onclick="location.href = '@Url.Action("CreateStored", "Hat", new { orderId = Model.Id, customerEmail = Model.CustomerEmail})'" />
</p>
<div>
    @Html.Partial("_ListStoredHats")
</div>

<br />
<div class="form-group">
    @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="checkbox">
            @Html.EditorFor(model => model.Priority)
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>
    </div>
</div>


<div class="form-group">
    @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
    </div>
</div>

@*Lägg till totalsumma*@

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Skapa beställning" class="btn btn-default" />
    </div>
</div>

@if (Model.CustomerEmail != null) {
    <div>
        <input type="button" class="btn" value="Avbryt registreringen av denna order " onclick="location.href = '@Url.Action("Delete", "Order", new { id = Model.Id })'" />
    </div>
    <style>
        #hideOnRegOrder { display: none; }
    </style>
 }
