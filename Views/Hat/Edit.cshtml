@model Hattmakarens_system.ViewModels.HatViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Redigera hatt</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Status", new SelectList(ViewBag.StatusesToPickFrom, "Value", "Text"), new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>

    @using (Html.BeginForm("PickMaterial", "Hat"))
    {
    <div class="form-group ">
        @Html.Label("Välj Tyg", new { @class = "col-md-2 control-label" })
        <div class="col-md-10 ">
            <div class="btn-group-toggle" data-toggle="buttons">
                @foreach (var material in Model.TygMaterial)
                {
                    if (material.State == true)
                    {
                        <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialModify", "Hat", new { hatId = Model.Id, id = material.MaterialId })'">
                            <input type="checkbox" checked autocomplete="off"> @material.MaterialName <span class="badge badge-primary"> <img src="@Href("~/Img/icons8-done-24.png")" style="width: 12px; height: 12px;" /> </span>
                        </label>
                    }
                    else
                    {
                        <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialModify", "Hat", new { hatId = Model.Id, id = material.MaterialId })'">
                            <input type="checkbox" checked autocomplete="off"> @material.MaterialName
                        </label>
                    }
                }
            </div>
        </div>
    </div>

    <div class="form-group ">
        @Html.Label("Välj Dekoration", new { @class = "col-md-2 control-label" })
        <div class="col-md-10 ">
            <div class="btn-group-toggle" data-toggle="buttons">
                @foreach (var material in Model.DekorationMaterial)
                {
                    if (material.State == true)
                    {
                        <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialModify", "Hat", new { hatId = Model.Id, id = material.MaterialId })'">
                            <input type="checkbox" checked autocomplete="off"> @material.MaterialName <span class="badge badge-primary"> <img src="@Href("~/Img/icons8-done-24.png")" style="width: 12px; height: 12px;" /> </span>
                        </label>
                    }
                    else
                    {
                        <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialModify", "Hat", new { hatId = Model.Id, id = material.MaterialId })'">
                            <input type="checkbox" checked autocomplete="off"> @material.MaterialName
                        </label>
                    }
                }

            </div>
        </div>
    </div>

    <div class="form-group ">
        @Html.Label("Välj Tråd", new { @class = "col-md-2 control-label" })
        <div class="col-md-10 ">
            <div class="btn-group-toggle" data-toggle="buttons">
                @foreach (var material in Model.TrådMaterial)
                {
                    if (material.State == true)
                    {
                        <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialModify", "Hat", new { hatId = Model.Id, id = material.MaterialId })'">
                            <input type="checkbox" checked autocomplete="off"> @material.MaterialName <span class="badge badge-primary"> <img src="@Href("~/Img/icons8-done-24.png")" style="width: 12px; height: 12px;" /> </span>
                        </label>
                    }
                    else
                    {
                        <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialModify", "Hat", new { hatId = Model.Id, id = material.MaterialId })'">
                            <input type="checkbox" checked autocomplete="off"> @material.MaterialName
                        </label>
                    }
                }
            </div>
        </div>
    </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.HatModelName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.HatModelName, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    @if (Model.HatModelID != 1)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.HatModelDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.HatModelDescription, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.UserId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("UserId", new SelectList(ViewBag.UsersToPickFrom, "Value", "Text"), new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Spara" class="btn btn-default" />
        </div>
    </div>
</div>

    <div class="form-group" id="hidden">
        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
}

<style>
    #hidden { display: none; }
</style>
