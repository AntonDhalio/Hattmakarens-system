@model Hattmakarens_system.ViewModels.HatViewModel

@{
    ViewBag.Title = "CreateStored";
}
<script src="~/Scripts/jscolor.js"></script>
<h2>Lägg till en lagerförd hatt</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <input type="button" class="btn" value="Välj lagrad hatt" onclick="location.href = '@Url.Action("SearchHatModel", "Hatmodel", new { orderId = Model.OrderId, customerEmail = Model.CustomerEmail })'" />
    @if (Model.HatModelName != null)
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.Partial("_PickMaterialPartial")
        @*<div class="form-group ">
                @Html.LabelFor(model => model.PickedMaterials, new { @class = "col-md-2 control-label" })
                <div class="col-md-10 ">
                    @Html.ListBoxFor(model => model.SelectedStatuses, Model.Statuses)
                </div>
            </div>*@

        @*<div class="form-group ">
                @Html.Label("Välj Tyg", new { @class = "col-md-2 control-label" })
                <div class="col-md-10 ">
                    <div class="btn-group-toggle" data-toggle="buttons">
                        @foreach (var material in Model.TygMaterial)
                        {
                            <label class="btn btn-secondary" type="button" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name; ">
                                <input type="checkbox" checked autocomplete="off"> @material.MaterialName
                            </label>
                        }
                    </div>
                </div>
            </div>

            <div class="form-group ">
                @Html.Label("Välj Dekoration", new { @class = "col-md-2 control-label" })
                <div class="col-md-10 ">
                    <div class="btn-group-toggle" data-toggle="buttons">
                        @foreach (var material in Model.DekorationMaterial)
                        {
                            <label class="btn btn-secondary" type="button" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name; ">
                                <input type="checkbox" checked autocomplete="off"> @material.MaterialName
                            </label>
                        }
                    </div>
                </div>
            </div>

            <div class="form-group ">
                @Html.Label("Välj Tråd", new { @class = "col-md-2 control-label" })
                <div class="col-md-10 ">
                    <div class="btn-group-toggle" data-toggle="buttons">
                        @foreach (var material in Model.TrådMaterial)
                        {
                            <label class="btn btn-secondary" type="button" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name; ">
                                <input type="checkbox" checked autocomplete="off"> @material.MaterialName <span class="badge badge-primary"> <img src="@Href("~/Img/icons8-done-24.png")" style="width: 12px; height: 12px;" /> </span>
                            </label>
                        }
                    </div>
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.HatModelName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.HatModelName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HatModelDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.HatModelDescription, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
            <p>Priset anges exklusive moms</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("UserId", new SelectList(ViewBag.UsersToPickFrom, "Value", "Text"), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group" id="hidden">
            @Html.LabelFor(model => model.CustomerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerEmail, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group" id="hidden2">
            @Html.LabelFor(model => model.HatModelID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HatModelID, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lägg till lagerförd hatt på beställningen" class="btn btn-default" />
            </div>
        </div>
    }
</div>
}

<style>
    #hidden, #hidden2, #hideOnRegOrder {
        display: none;
    }
</style>
