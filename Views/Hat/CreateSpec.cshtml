@model Hattmakarens_system.ViewModels.HatViewModel


<h2>Lägg till en specialtillverkad hatt</h2>

@using (Html.BeginForm("CreateSpec", "Hat", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @using (Html.BeginForm("PickMaterialSpec", "Hat"))
    {
        <div class="form-group ">
            @Html.Label("Välj Tyg", new { @class = "col-md-2 control-label" })
            <div class="col-md-10 ">
                <div class="btn-group-toggle" data-toggle="buttons">
                    @foreach (var material in Model.TygMaterial)
                    {
                        if (material.State == true)
                        {
                            <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialSpec", "Hat", new { orderId = Model.OrderId, customerEmail = Model.CustomerEmail, id = material.MaterialId})'">
                                <input type="checkbox" checked autocomplete="off"> @material.MaterialName <span class="badge badge-primary"> <img src="@Href("~/Img/icons8-done-24.png")" style="width: 12px; height: 12px;" /> </span>
                            </label>
                        }
                        else
                        {
                            <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialSpec", "Hat", new { orderId = Model.OrderId, customerEmail = Model.CustomerEmail, id = material.MaterialId})'">
                                <input type="checkbox" checked autocomplete="off"> @material.MaterialName
                            </label>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="form-group ">
            @Html.Label("Välj Dekoration", new { @class = "col-md-2 control-label" })
            <div class="col-md-10 ">
                <div class="btn-group-toggle" data-toggle="buttons">
                    @foreach (var material in Model.DekorationMaterial)
                    {
                        if (material.State == true)
                        {
                            <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialSpec", "Hat", new { orderId = Model.OrderId, customerEmail = Model.CustomerEmail, id = material.MaterialId})'">
                                <input type="checkbox" checked autocomplete="off"> @material.MaterialName <span class="badge badge-primary"> <img src="@Href("~/Img/icons8-done-24.png")" style="width: 12px; height: 12px;" /> </span>
                            </label>
                        }
                        else
                        {
                            <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialSpec", "Hat", new { orderId = Model.OrderId, customerEmail = Model.CustomerEmail, id = material.MaterialId})'">
                                <input type="checkbox" checked autocomplete="off"> @material.MaterialName
                            </label>
                        }
                    }

                </div>
            </div>
        </div>

        <div class="form-group ">
            @Html.Label("Välj Tråd", new { @class = "col-md-2 control-label" })
            <div class="col-md-10 ">
                <div class="btn-group-toggle" data-toggle="buttons">
                    @foreach (var material in Model.TrådMaterial)
                    {
                        if (material.State == true)
                        {
                            <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialSpec", "Hat", new { orderId = Model.OrderId, customerEmail = Model.CustomerEmail, id = material.MaterialId})'">
                                <input type="checkbox" checked autocomplete="off"> @material.MaterialName <span class="badge badge-primary"> <img src="@Href("~/Img/icons8-done-24.png")" style="width: 12px; height: 12px;" /> </span>
                            </label>
                        }
                        else
                        {
                            <label class="btn btn-secondary" type="submit" value="@material.MaterialId" id="@material.MaterialId" style="background-color: @material.Name;" onclick=" location.href='@Url.Action("PickMaterialSpec", "Hat", new { orderId = Model.OrderId, customerEmail = Model.CustomerEmail, id = material.MaterialId})'">
                                <input type="checkbox" checked autocomplete="off"> @material.MaterialName
                            </label>
                        }
                    }
                </div>
            </div>
        </div>
    }


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--<div class="form-group">-->
    @*@Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "control-label col-md-2" })*@
    <!--<div class="col-md-10">-->
    @*@Html.EditorFor(model => model.Path, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Path, "", new { @class = "text-danger" })*@
    <!--</div>
    </div>-->
    @*<div class="form-group ">
            @Html.LabelFor(model => model.PickedMaterials, new {@class = "col-md-2 control-label" })
            <div class="col-md-10 ">
                @Html.ListBoxFor(model => model.PickedMaterials, new MultiSelectList(ViewBag.MaterialsToPickFrom, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PickedMaterials, "", new { @class = "text-danger" })
                <p class="text-danger">@TempData["message"]</p>
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
        <p>Priset anges exklusive moms</p>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.Label("Välj bild")
            @Html.TextBox("file", "", new { type = "file", multiple = "multiple" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("UserId", new SelectList(ViewBag.UsersToPickFrom, "Value", "Text"), new { @class = "form-control" })

        </div>
        <br />
        <br />
        <br />
        <div class="form-group" id="adjust">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btn" class="btn btn-success" value="Lägg till hatt på beställning" />
            </div>
        </div>
    </div>
    <div class="form-group" id="hidden">
        @Html.LabelFor(model => model.CustomerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CustomerEmail, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
</div>
}
<style>
    #adjust {padding: 0; margin: 0 ; border: 0;}
    #bigger {
        padding: 0;
        margin: 0;
        border: 0;
    }
    #hidden {display: none;}
</style>
